openapi: 3.0.0
info:
  title: Products API
  description: API to manage products with their categories in the database
  version: "1.0.0"
servers:
  - url: 'https://example.com/api'
paths:
  /products:
    get:
      summary: Get all products with categories
      description: Retrieves a list of all products along with their associated categories.
      operationId: getAllProductsWithCategories
      responses:
        '200':
          description: A list of products with categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductWithCategories'
    post:
      summary: Create a new product with categories
      description: Adds a new product along with specified categories to the database.
      operationId: createProductWithCategories
      requestBody:
        description: Product and categories data that need to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWithCategories'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithCategories'
        '400':
          description: Invalid input

  /products/{productId}:
    get:
      summary: Get a product by ID with categories
      description: Retrieves a product by its ID along with associated categories.
      operationId: getProductByIdWithCategories
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product found with categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithCategories'
        '404':
          description: Product not found
    put:
      summary: Update a product with categories
      description: Updates the details of an existing product along with its categories by product ID.
      operationId: updateProductWithCategories
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWithCategories'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductWithCategories'
        '400':
          description: Invalid input
        '404':
          description: Product not found
    delete:
      summary: Delete a product with categories
      description: Deletes a product by its ID and removes associated categories.
      operationId: deleteProductWithCategories
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found

components:
  schemas:
    Product:
      type: object
      required:
        - name
        - price
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for the Product
        name:
          type: string
          maxLength: 100
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        photo:
          type: string
          maxLength: 100
          description: URL of the product photo
        price:
          type: number
          format: decimal
          description: Price of the product
        display:
          type: boolean
          description: Whether the product is displayed to customers
        enabled:
          type: boolean
          description: Whether the product is enabled
        created_at:
          type: string
          format: date-time
          description: Date and time when the product was created
        updated_at:
          type: string
          format: date-time
          description: Date and time when the product was last updated

    ProductWithCategories:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            categories:
              type: array
              description: List of categories associated with the product
              items:
                $ref: '#/components/schemas/Category'
              
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Unique identifier for the Category
        name:
          type: string
          maxLength: 100
          description: Name of the category
        description:
          type: string
          description: Detailed description of the category
